<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="1.createProfile" doc:id="a042258e-7a95-46a5-9b24-7109ff44c81a" >
		<http:listener doc:name="Listener" doc:id="87cc7906-3ef4-4e09-af62-fd1ba9d8e95b" config-ref="HTTP_Listener_config" path="/CreateProfile">
			<http:response statusCode="201" />
		</http:listener>
		<logger level="INFO" doc:name="Logger" doc:id="5cd97b11-c29d-4862-be21-1a90ae41bb96" message="#[payload]"/>
		<set-payload value="#[payload.employee.first_name ++ ' ' ++ payload.employee.last_name ++ ' profile is created in HRMS System.']" doc:name="Set Payload" doc:id="1f9b21d4-9f3a-4684-b629-da715e955a4f" />
	</flow>
	<flow name="2.TriggerFlow" doc:id="61caf59f-966d-4490-a468-f8c03d8b396e" >
		<http:listener doc:name="Listener" doc:id="61e77d6c-347d-4497-9bdd-bb1d21cfffb2" config-ref="HTTP_Listener_config" path="/triggerFlow">
			<http:response statusCode="201" />
		</http:listener>
		<ee:transform doc:name="Transform Message" doc:id="e6e5c119-235b-4575-a130-fee4f3b970ce">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
lookup('1.createProfile', payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="3.toCamelCase" doc:id="46f57432-679e-4c67-8a11-aa35aebbe970" >
		<http:listener doc:name="Listener" doc:id="c97e83c7-9a8f-48a4-9ea1-06f77c6255ba" config-ref="HTTP_Listener_config" path="/ConvertCamelCase"/>
		<logger level="INFO" doc:name="Logger" doc:id="3ad50b94-c640-43ae-ba27-e369c1bb2576" message="#['Input String :' ++ attributes.queryParams.string]"/>
		<set-variable value="#[attributes.queryParams.string]" doc:name="Set Variable" doc:id="7968191f-eb53-43ea-8296-d59162e8010f" variableName="inputString"/>
		<ee:transform doc:name="Transform Message" doc:id="a8794542-ac45-4eb1-98bc-3303b1cd4886" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	a: java!utils::MyUtils::toCamelCase(vars.inputString)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="4.1CreateAFlowThatJoinsInput1AndInput2" doc:id="4417e9d8-6429-434f-a280-b45412b78537" >
		<http:listener doc:name="Listener" doc:id="b709fa01-cd64-4c48-8d24-79ee88316064" config-ref="HTTP_Listener_config" path="/MatchById"/>
		<set-payload value='#[{
   "employee":[
      {
         "id":"A007",
         "first_name":"Jan",
         "last_name":"Doe"
      },
      {
         "id":"A008",
         "first_name":"Ron",
         "last_name":"David"
      },
      {
         "id":"A009",
         "first_name":"Jane",
         "last_name":"Kane"
      },
      {
         "id":"A010",
         "first_name":"Marsh",
         "last_name":"Megan"
      },
      {
         "id":"A011",
         "first_name":"Kelly",
         "last_name":"Mitch"
      },
      {
         "id":"A012",
         "first_name":"Chris",
         "last_name":"Vaste"
      }
   ]
}]' doc:name="input1 JSON" doc:id="fc777b7a-a90f-4e2e-81e7-37ef65c488e3"/>
		<set-variable value="#[payload]" doc:name="Save Input1" doc:id="55a09e5f-5ff4-463f-929c-8ab29fc49002" variableName="input1"/>
		<set-payload value='#[{
   "scoreBoard":[
      {
         "id":"A007",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            80,
            75,
            89,
            100
         ]
      },
      {
         "id":"A008",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            70,
            85,
            69,
            90
         ]
      },
      {
         "id":"A021 ",
         "subjects ":[
            "Maths ",
            "English ",
            "Arts ",
            "Drawimgs "
         ],
         "score ":[
            90,
            87,
            77,
            95
         ]
      }
   ]
}]' doc:name="input2 JSON" doc:id="ded0f1be-e35a-402f-8ab2-7b6650993819"/>
		<set-variable value="#[payload]" doc:name="save Input2" doc:id="316a3494-a7fe-4c5b-a9dc-36a41ba4694c" variableName="input2"/>
		<ee:transform doc:name="Transform Message" doc:id="ca052cb9-61fc-41b5-a5d2-9a675b10993a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Arrays 
var employees =  vars.input1.employee 
var scoreBoards = vars.input2.scoreBoard
output application/json
---
"certificate" :
 join(employees, scoreBoards, (employee) -> employee.id, (scoreBoard) -> scoreBoard.id) map ((element) -> {
id: element.l.id,
firstName:element.l.first_name,
lastName:element.l.last_name,
marksBySubjectWise:(element.r.subjects map ((key,index) ->(key ++ ":" ++ element.r.score[index])))

//marksBySubjectWise:zip(element.r.subjects,element.r.score)


})
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="4.2CreateAFlowThatJoinsInput1AndInput2" doc:id="e10029ee-866d-4939-b3aa-59cdf060618c" >
		<http:listener doc:name="Listener" doc:id="4437633c-f089-4b7c-81a5-f3816e975e63" config-ref="HTTP_Listener_config" path="/Join"/>
		<set-payload value='#[{
   "employee":[
      {
         "id":"A007",
         "first_name":"Jan",
         "last_name":"Doe"
      },
      {
         "id":"A008",
         "first_name":"Ron",
         "last_name":"David"
      },
      {
         "id":"A009",
         "first_name":"Jane",
         "last_name":"Kane"
      },
      {
         "id":"A010",
         "first_name":"Marsh",
         "last_name":"Megan"
      },
      {
         "id":"A011",
         "first_name":"Kelly",
         "last_name":"Mitch"
      },
      {
         "id":"A012",
         "first_name":"Chris",
         "last_name":"Vaste"
      }
   ]
}]' doc:name="input1 JSON" doc:id="274d6e54-7a77-4bef-b6fe-f9b368c79c1f"/>
		<set-variable value="#[payload]" doc:name="Save Input1" doc:id="d33c7114-7866-4aa8-83eb-4836d71743f6" variableName="input1"/>
		<set-payload value='#[{
   "scoreBoard":[
      {
         "id":"A007",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            80,
            75,
            89,
            100
         ]
      },
      {
         "id":"A008",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            70,
            85,
            69,
            90
         ]
      },
      {
         "id":"A021 ",
         "subjects":[
            "Maths ",
            "English ",
            "Arts ",
            "Drawimgs "
         ],
         "score":[
            90,
            87,
            77,
            95
         ]
      }
   ]
}]' doc:name="input2 JSON" doc:id="d21775f6-b355-49c5-a466-70b66e5d2620"/>
		<set-variable value="#[payload]" doc:name="save Input2" doc:id="36786bee-1419-40a6-900e-5fbbfae08c24" variableName="input2"/>
		<ee:transform doc:name="Transform Message" doc:id="5759eab9-512e-4af4-b7a2-c1a18b921672" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Arrays 
var employees =  vars.input1.employee 
var scoreBoards = vars.input2.scoreBoard
output application/json
---
"certificate" :
outerJoin(employees, scoreBoards, (employee) -> employee.id, (scoreBoard) -> scoreBoard.id) map ((element) -> {
id: element.l.id default element.r.id ,
firstName:element.l.first_name default '',
lastName:element.l.last_name default '',

marksBySubjectWise:(element.r.subjects map ((key,index) ->(key ++ ":" ++ element.r.score[index])))


})
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="5.NaturalNumber" doc:id="1b9ab2b5-98cb-4618-b66b-141f19627471" >
		<http:listener doc:name="Listener" doc:id="cd475fc2-5c5e-4682-8729-1a156b517f39" config-ref="HTTP_Listener_config" path="/NaturalNumber/{n}"/>
		<set-variable value="#[attributes.uriParams.n]" doc:name="Set input N" doc:id="0c426c80-0109-420c-bba5-d563591ca02a" variableName="number"/>
		<set-variable value='#["[" ++ 1]' doc:name="Set Variable" doc:id="317da0ef-b1f3-42be-bf8f-028247af3d40" variableName="i" />
		<foreach doc:name="For Each" doc:id="989f9ced-73dc-48e1-bc0b-32bb089035ae" collection="#[1 to vars.number-1]">
			<set-variable value='#[vars.i ++ "," ++ (vars.counter+1)]' doc:name="Set Variable" doc:id="c834d42a-250a-4c48-bb0a-07acbd5b547e" variableName="i"/>
		</foreach>
		<set-payload doc:name="Set Payload" doc:id="fea48a36-f1e2-4a1a-a495-5227fcc2d145" value='#[vars.i ++ "]"]' />
	</flow>
</mule>
